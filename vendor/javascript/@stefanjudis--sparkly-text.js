let e;let t;const n="replaceSync"in CSSStyleSheet.prototype;const a=window.matchMedia("(prefers-reduced-motion: no-preference)");class SparklyText extends HTMLElement{#e=3;#t='<svg width="1200" height="1200" viewBox="0 0 1200 1200" aria-hidden="true">\n\t\t<path fill="red" d="m611.04 866.16c17.418-61.09 50.25-116.68 95.352-161.42 45.098-44.742 100.94-77.133 162.17-94.062l38.641-10.68-38.641-10.68c-61.227-16.93-117.07-49.32-162.17-94.062-45.102-44.738-77.934-100.33-95.352-161.42l-11.039-38.641-11.039 38.641c-17.418 61.09-50.25 116.68-95.352 161.42-45.098 44.742-100.94 77.133-162.17 94.062l-38.641 10.68 38.641 10.68c61.227 16.93 117.07 49.32 162.17 94.062 45.102 44.738 77.934 100.33 95.352 161.42l11.039 38.641z"/>\n\t</svg>';#n="\n    :host {\n      --_sparkle-base-size: var(--sparkly-text-size, 1em);\n      --_sparkle-base-animation-length: var(--sparkly-text-animation-length, 1.5s);\n      --_sparkle-base-color: var(--sparkly-text-color, #4ab9f8);\n\n      position: relative;\n      z-index: 0;\n    }\n\n    svg {\n      position: absolute;\n      z-index: -1;\n      width: var(--_sparkle-base-size);\n      height: var(--_sparkle-base-size);\n      transform-origin: center;\n      pointer-events: none;\n    }\n\n    @media (prefers-reduced-motion: no-preference) {\n      svg {\n        animation: sparkle-spin var(--_sparkle-base-animation-length) linear infinite;\n      }\n    }\n\n    svg path {\n      fill: var(--_sparkle-base-color);\n    }\n\n    @keyframes sparkle-spin {\n      0% {\n        scale: 0;\n        opacity: 0;\n        rotate: 0deg;\n      }\n\n      50% {\n        scale: 1;\n        opacity: 1;\n      }\n\n      100% {\n        scale: 0;\n        opacity: 0;\n        rotate: 180deg;\n      }\n    }\n";static register(){"customElements"in window&&window.customElements.define("sparkly-text",SparklyText)}generateCss(){if(!e)if(n){e=new CSSStyleSheet;e.replaceSync(this.#n)}else{e=document.createElement("style");e.textContent=this.#n}n?this.shadowRoot.adoptedStyleSheets=[e]:this.shadowRoot.append(e.cloneNode(true))}connectedCallback(){const e=a.matches||!this.shadowRoot;if(!this.shadowRoot){this.attachShadow({mode:"open"});this.generateCss();this.shadowRoot.append(document.createElement("slot"))}if(e){this.#e=parseInt(this.getAttribute("number-of-sparkles")||`${this.#e}`,10);if(Number.isNaN(this.#e))throw new Error("Invalid number-of-sparkles value");this.addSparkles()}a.addEventListener("change",this.motionOkChange)}disconnectedCallback(){a.removeEventListener("change",this.motionOkChange)}motionOkChange=()=>{a.matches&&this.addSparkles()};addSparkles(){for(let e=0;e<this.#e;e++)setTimeout((()=>{this.addSparkle((e=>{e.style.top=`calc(${Math.random()*110-5}% - var(--_sparkle-base-size) / 2)`;e.style.left=`calc(${Math.random()*110-5}% - var(--_sparkle-base-size) / 2)`}))}),e*500)}addSparkle(e){if(!t){const e=document.createElement("span");e.innerHTML=this.#t;t=e.firstElementChild.cloneNode(true)}const n=t.cloneNode(true);e(n);this.shadowRoot.appendChild(n);n.addEventListener("animationiteration",(()=>{e(n)}))}}SparklyText.register();export{SparklyText};

